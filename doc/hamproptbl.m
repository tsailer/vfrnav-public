#!/usr/bin/octave

graphics_toolkit ("gnuplot");

aftbln = 5;

afval = [80 100 125 150 175 200];
afcpc = [1.67 1.37 1.165 1 0.881 0.810 ;
	 1.55 1.33 1.149 1 0.890 0.820 ];
afctc = [1.39 1.27 1.123 1 0.915 0.865 ;
	 1.46 1.29 1.143 1 0.890 0.840 ];

afcpp = [ polyfit(afval, afcpc(1,:), aftbln) ; polyfit(afval, afcpc(2,:), aftbln) ];
afctp = [ polyfit(afval, afctc(1,:), aftbln) ; polyfit(afval, afctc(2,:), aftbln) ];

printf("// Automatically generated by hamproptbl.m, do not edit!\n\n#include \"propeller.h\"\n");

printf("\nconst double Propeller::poly_afcp[2][%u] = {", aftbln+1);
for t=1:2;
  if t>1;
    printf(",");
  endif;
  printf("\n\t{");
  for tt=aftbln+1:-1:1;
    printf(" %g", afcpp(t,tt));
    if tt>1;
      printf(",");
    endif;
  endfor;
  printf(" }");
endfor;
printf("\n};\n");

printf("\nconst double Propeller::poly_afct[2][%u] = {", aftbln+1);
for t=1:2;
  if t>1;
    printf(",");
  endif;
  printf("\n\t{");
  for tt=aftbln+1:-1:1;
    printf(" %g", afctp(t,tt));
    if tt>1;
      printf(",");
    endif;
  endfor;
  printf(" }");
endfor;
printf("\n};\n");

f=figure("visible","off");
plot(afval,afcpc(1,:),"1+;CP 1;",...
     afval,afcpc(2,:),"2+;CP 2;",...
     afval,afctc(1,:),"3+;CT 1;",...
     afval,afctc(2,:),"4+;CT 2;",...
     min(afval):max(afval),polyval(afcpp(1,:),min(afval):max(afval)),"1-;CP J=0;",...
     min(afval):max(afval),polyval(afcpp(2,:),min(afval):max(afval)),"2-;CP J>=0.5;",...
     min(afval):max(afval),polyval(afctp(1,:),min(afval):max(afval)),"3-;CT J=0;",...
     min(afval):max(afval),polyval(afctp(2,:),min(afval):max(afval)),"4-;CT J>=0.5;");
grid on;
xlabel("AF -- Activity Factor");
ylabel("CP/CT Factor");
title("CP/CT versus AF");
print(f, "propafcpct.eps","-depsc2","-portrait","-color");

f=figure("visible","off");
plot(afval,afcpc(1,:)-polyval(afcpp(1,:),afval),"1+-;CP J=0 error;",...
     afval,afcpc(2,:)-polyval(afcpp(2,:),afval),"2+-;CP J>=0.5 error;",...
     afval,afctc(1,:)-polyval(afctp(1,:),afval),"3+-;CT J=0 error;",...
     afval,afctc(2,:)-polyval(afctp(2,:),afval),"4+-;CT J>=0.5 error;");
grid on;
xlabel("AF -- Activity Factor");
ylabel("CP/CT Factor Approximation Error");
title("CP/CT versus AF Approximation Error");
print(f, "propafcpcterr.eps","-depsc2","-portrait","-color");

zjstal = 0:0.4:3.2;
cpstal = [ .05 .12 .22 .35 .49 .65 .82 1.01 1.19 ;
	   .16 .29 .49 .75 1.05 1.37 1.74 2.13 2.53 ;
	   .30 .47 .75 1.1 1.51 1.96 2.41 2.86 3.3 ;
	   .45 .71 1.03 1.4 1.89 2.45 2.96 3.55 4.1 ];
ctstal = [ .125 .151 .172 .187 .204 .218 .233 .243 .249 ;
	   .268 .309 .343 .369 .387 .404 .420 .435 .451 ;
	   .401 .457 .497 .529 .557 .582 .605 .629 .651 ;
	   .496 .577 .628 .665 .695 .720 .742 .764 .785 ];

cpstaln = 3;
ctstaln = 3;

cpstalp = [ polyfit(zjstal, cpstal(1,:), cpstaln) ;
	    polyfit(zjstal, cpstal(2,:), cpstaln) ;
	    polyfit(zjstal, cpstal(3,:), cpstaln) ;
	    polyfit(zjstal, cpstal(4,:), cpstaln) ];

ctstalp = [ polyfit(zjstal, ctstal(1,:), ctstaln) ;
	    polyfit(zjstal, ctstal(2,:), ctstaln) ;
	    polyfit(zjstal, ctstal(3,:), ctstaln) ;
	    polyfit(zjstal, ctstal(4,:), ctstaln) ];

printf("\nconst double Propeller::poly_cpstal[7][%u] = {", cpstaln+1);
for t=1:4;
  if t>1;
    printf(",");
  endif;
  printf("\n\t{");
  for tt=cpstaln+1:-1:1;
    printf(" %g", cpstalp(t,tt));
    if tt>1;
      printf(",");
    endif;
  endfor;
  printf(" }");
  if t<4;
    printf(",\n\t{");
    for tt=cpstaln+1:-1:1;
      printf(" %g", 0.5*(cpstalp(t,tt)+cpstalp(t+1,tt)));
      if tt>1;
	printf(",");
      endif;
    endfor;
    printf(" }");
  endif;
endfor;
printf("\n};\n");

printf("\nconst double Propeller::poly_ctstal[7][%u] = {", ctstaln+1);
for t=1:4;
  if t>1;
    printf(",");
  endif;
  printf("\n\t{");
  for tt=ctstaln+1:-1:1;
    printf(" %g", ctstalp(t,tt));
    if tt>1;
      printf(",");
    endif;
  endfor;
  printf(" }");
  if t<4;
    printf(",\n\t{");
    for tt=ctstaln+1:-1:1;
      printf(" %g", 0.5*(ctstalp(t,tt)+ctstalp(t+1,tt)));
      if tt>1;
	printf(",");
      endif;
    endfor;
    printf(" }");
  endif;
endfor;
printf("\n};\n\n");

f=figure("visible","off");
plot(zjstal,cpstal(1,:),"1+;CPstall 2 Blade;",...
     zjstal,cpstal(2,:),"2+;CPstall 4 Blade;",...
     zjstal,cpstal(3,:),"3+;CPstall 6 Blade;",...
     zjstal,cpstal(4,:),"4+;CPstall 8 Blade;",...
     min(zjstal):0.1:max(zjstal),polyval(cpstalp(1,:),min(zjstal):0.1:max(zjstal)),"1-;CPstall 2 Blade;",...
     min(zjstal):0.1:max(zjstal),polyval(cpstalp(2,:),min(zjstal):0.1:max(zjstal)),"2-;CPstall 4 Blade;",...
     min(zjstal):0.1:max(zjstal),polyval(cpstalp(3,:),min(zjstal):0.1:max(zjstal)),"3-;CPstall 6 Blade;",...
     min(zjstal):0.1:max(zjstal),polyval(cpstalp(4,:),min(zjstal):0.1:max(zjstal)),"4-;CPstall 8 Blade;");
grid on;
xlabel("ZJ");
ylabel("CP Stall");
title("CP Stall versus ZJ");
print(f,"propcpstal.eps","-depsc2","-portrait","-color");

f=figure("visible","off");
plot(zjstal,cpstal(1,:)-polyval(cpstalp(1,:),zjstal),"1+-;CPstall 2 Blade error;",...
     zjstal,cpstal(2,:)-polyval(cpstalp(2,:),zjstal),"2+-;CPstall 4 Blade error;",...
     zjstal,cpstal(3,:)-polyval(cpstalp(3,:),zjstal),"3+-;CPstall 6 Blade error;",...
     zjstal,cpstal(4,:)-polyval(cpstalp(4,:),zjstal),"4+-;CPstall 8 Blade error;");
grid on;
xlabel("ZJ");
ylabel("CP Stall Approximation Error");
title("CP Stall versus ZJ Approximation Error");
print(f,"propcpstalerr.eps","-depsc2","-portrait","-color");

f=figure("visible","off");
plot(zjstal,ctstal(1,:),"1+;CTstall 2 Blade;",...
     zjstal,ctstal(2,:),"2+;CTstall 4 Blade;",...
     zjstal,ctstal(3,:),"3+;CTstall 6 Blade;",...
     zjstal,ctstal(4,:),"4+;CTstall 8 Blade;",...
     min(zjstal):0.1:max(zjstal),polyval(ctstalp(1,:),min(zjstal):0.1:max(zjstal)),"1-;CTstall 2 Blade;",...
     min(zjstal):0.1:max(zjstal),polyval(ctstalp(2,:),min(zjstal):0.1:max(zjstal)),"2-;CTstall 4 Blade;",...
     min(zjstal):0.1:max(zjstal),polyval(ctstalp(3,:),min(zjstal):0.1:max(zjstal)),"3-;CTstall 6 Blade;",...
     min(zjstal):0.1:max(zjstal),polyval(ctstalp(4,:),min(zjstal):0.1:max(zjstal)),"4-;CTstall 8 Blade;");
grid on;
xlabel("ZJ");
ylabel("CT Stall");
title("CT Stall versus ZJ");
print(f,"propctstal.eps","-depsc2","-portrait","-color");

f=figure("visible","off");
plot(zjstal,ctstal(1,:)-polyval(ctstalp(1,:),zjstal),"1+-;CTstall 2 Blade error;",...
     zjstal,ctstal(2,:)-polyval(ctstalp(2,:),zjstal),"2+-;CTstall 4 Blade error;",...
     zjstal,ctstal(3,:)-polyval(ctstalp(3,:),zjstal),"3+-;CTstall 6 Blade error;",...
     zjstal,ctstal(4,:)-polyval(ctstalp(4,:),zjstal),"4+-;CTstall 8 Blade error;");
grid on;
xlabel("ZJ");
ylabel("CT Stall Approximation Error");
title("CT Stall versus ZJ Approximation Error");
print(f,"propctstalerr.eps","-depsc2","-portrait","-color");

inn = [ 10 6 8 8 7 10 6 ];

bldang = [ 0 2 4 6 10 14 18 22 26 30 ;
	   10 15 20 25 30 35 0 0 0 0 ;
	   10 15 20 25 30 35 40 45 0 0 ;
	   20 25 30 35 40 45 50 55 0 0 ;
	   30 35 40 45 50 55 60 0 0 0 ;
	   45 47.5 50 52.5 55 57.5 60 62.5 65 67.5 ;
	   57.5 60 62.5 65 67.5 70 0 0 0 0 ];

cpang = [ .0158 .0165 .0188 .0230 .0369 .0588 .0914 .1340 .1816 .2273 ;
	  .0215 .0459 .0829 .1305 .1906 .2554 0 0 0 0 ;
	  -.0149 -.0088 .0173 .0744 .1414 .2177 .3011 .3803 0 0 ;
	  -.0670 -.0385 .0285 .1304 .2376 .3536 .4674 .5535 0 0 ;
	  -.1150 -.0281 .1086 .2646 .4213 .5860 .7091 0 0 0 ;
	  -.1151 .0070 .1436 .2910 .4345 .5744 .7142 .8506 .9870 1.1175 ;
	  -.2427 .0782 .4242 .7770 1.1164 1.4443 0 0 0 0 ;
	  .0311 .0320 .0360 .0434 .0691 .1074 .1560 .2249 .3108 .4026 ;
	  .0380 .0800 .1494 .2364 .3486 .4760 0 0 0 0 ;
	  -.0228 -.0109 .0324 .1326 .2578 .3990 .5664 .7227 0 0 ;
	  -.1252 -.0661 .0535 .2388 .4396 .6554 .8916 1.0753 0 0 ;
	  -.2113 -.0480 .1993 .4901 .7884 1.0990 1.3707 0 0 0 ;
	  -.2077 .0153 .2657 .5387 .8107 1.075 1.3418 1.5989 1.8697 2.1238 ;
	  -.4508 .1426 .7858 1.4480 2.0899 2.7130 0 0 0 0 ;
	  .0450 .0461 .0511 .0602 .0943 .1475 .2138 .2969 .4015 .5237 ;
	  .0520 .1065 .2019 .3230 .4774 .5607 0 0 0 0 ;
	  -.0168 -.0085 .0457 .1774 .3520 .5506 .7833 1.0236 0 0 ;
	  -.1678 -.0840 .0752 .3262 .6085 .9127 1.2449 1.5430 0 0 ;
	  -.2903 -.0603 .2746 .6803 1.0989 1.5353 1.9747 0 0 0 ;
	  -.2783 .0259 .3665 .7413 1.1215 1.4923 1.8655 2.2375 2.6058 2.9831 ;
	  -.6181 .1946 1.0758 1.9951 2.8977 3.7748 0 0 0 0 ;
	  .0577 .0591 .0648 .0751 .1141 .1783 .2599 .3551 .4682 .5952 ;
	  .0650 .1277 .2441 .3947 .5803 .8063 0 0 0 0 ;
	  -.0079 -.0025 .0595 .2134 .4266 .6708 .9519 1.2706 0 0 ;
	  -.1894 -.0908 .0956 .3942 .7416 1.1207 1.5308 1.9459 0 0 ;
	  -.3390 -.0632 .3350 .8315 1.3494 1.890 2.4565 0 0 0 ;
	  -.3267 .0404 .4520 .9088 1.3783 1.8424 2.3060 2.7782 3.2292 3.7058 ;
	  -.7508 .2395 1.315 2.4469 3.5711 4.6638 0 0 0 0 ];

ctang = [ .0303 .0444 .0586 .0743 .1065 .1369 .1608 .1767 .1848 .1858 ;
	  .0205 .0691 .1141 .1529 .1785 .1860 0 0 0 0 ;
	  -.0976 -.0566 .0055 .0645 .1156 .1589 .1864 .1905 0 0 ;
	  -.1133 -.0624 .0111 .0772 .1329 .1776 .2020 .2045 0 0 ;
	  -.1132 -.0356 .0479 .1161 .1711 .2111 .2150 0 0 0 ;
	  -.0776 -.0159 .0391 .0868 .1279 .1646 .1964 .2213 .2414 .2505 ;
	  -.1228 -.0221 .0633 .1309 .1858 .2314 0 0 0 0 ;
	  .0426 .0633 .0853 .1101 .1649 .2204 .2678 .3071 .3318 .3416 ;
	  .0318 .1116 .1909 .2650 .3241 .3423 0 0 0 0 ;
	  -.1761 -.0960 .0083 .1114 .2032 .2834 .3487 .3596 0 0 ;
	  -.2155 -.1129 .0188 .1385 .2401 .3231 .3850 .3690 0 0 ;
	  -.2137 -.0657 .0859 .2108 .3141 .3894 .4095 0 0 0 ;
	  -.1447 -.0314 .0698 .1577 .2342 .3013 .3611 .4067 .4457 .4681 ;
	  -.2338 -.0471 .1108 .2357 .3357 .4174 0 0 0 0 ;
	  .0488 .0732 .0999 .1301 .2005 .2731 .3398 .3982 .4427 .4648 ;
	  .0375 .1393 .2448 .3457 .4356 .4931 0 0 0 0 ;
	  -.2295 -.1240 .0087 .1443 .2687 .3808 .4739 .5256 0 0 ;
	  -.2999 -.1527 .0235 .1853 .3246 .4410 .5290 .5467 0 0 ;
	  -.3019 -.0907 .1154 .2871 .4290 .5338 .5954 0 0 0 ;
	  -.2012 -.0461 .0922 .2125 .3174 .4083 .4891 .5549 .6043 .6415 ;
	  -.3307 -.0749 .1141 .3118 .4466 .5548 0 0 0 0 ;
	  .0534 .0795 .1048 .1421 .2221 .3054 .3831 .4508 .5035 .5392 ;
	  .0423 .1588 .2841 .4056 .5157 .6042 0 0 0 0 ;
	  -.2606 -.1416 .0097 .1685 .3172 .4526 .5655 .6536 0 0 ;
	  -.3615 -.1804 .0267 .2193 .3870 .5312 .6410 .7032 0 0 ;
	  -.3674 -.1096 .1369 .3447 .5165 .6454 .7308 0 0 0 ;
	  -.2473 -.0594 .1086 .2552 .3830 .4933 .5899 .6722 .7302 .7761 ;
	  -.4165 -.1040 .1597 .3671 .5289 .6556 0 0 0 0 ];

zjj = [ 0 .5 1 1.5 2 3 5 ];

cpangcoeff = [];
bldangcpcoeff = [];
ctangcoeff = [];
bldangctcoeff = [];
for bldidx=1:4;
  fitb = [];
  fitj = [];
  fitc = [];
  for t=1:7;
    fitc=[ fitc ; cpang(t+(bldidx-1)*7,1:inn(t))' ];
    fitj=[ fitj ; ones(inn(t),1)*zjj(t) ];
    fitb=[ fitb ; bldang(t,1:inn(t))' ];
  endfor;
  AA=[ones(size(fitc,1),1) fitj fitc fitj.^2 fitj.*fitc fitc.^2];
  AA=[AA fitj.^3 fitj.^2.*fitc fitj.*fitc.^2 fitc.^3];
  AA=[AA fitj.^4 fitj.^3.*fitc fitj.^2.*fitc.^2 fitj.*fitc.^3 fitc.^4];
  cpangcoeff=[cpangcoeff inv(AA'*AA)*AA'*fitb];
  err=sum((AA*cpangcoeff(:,bldidx)-fitb).^2);
  printf("// cpangcoeff%u error = %f\n", bldidx, err);

  AA=[ones(size(fitb,1),1) fitj fitb fitj.^2 fitj.*fitb fitb.^2];
  AA=[AA fitj.^3 fitj.^2.*fitb fitj.*fitb.^2 fitb.^3];
  AA=[AA fitj.^4 fitj.^3.*fitb fitj.^2.*fitb.^2 fitj.*fitb.^3 fitb.^4];
  bldangcpcoeff=[bldangcpcoeff inv(AA'*AA)*AA'*fitc];
  err=sum((AA*bldangcpcoeff(:,bldidx)-fitc).^2);
  printf("// bldangcpcoeff%u error = %f\n", bldidx, err);

  fitb = [];
  fitj = [];
  fitc = [];
  for t=1:7;
    fitc=[ fitc ; ctang(t+(bldidx-1)*7,1:inn(t))' ];
    fitj=[ fitj ; ones(inn(t),1)*zjj(t) ];
    fitb=[ fitb ; bldang(t,1:inn(t))' ];
  endfor;
  AA=[ones(size(fitc,1),1) fitj fitc fitj.^2 fitj.*fitc fitc.^2];
  AA=[AA fitj.^3 fitj.^2.*fitc fitj.*fitc.^2 fitc.^3];
  AA=[AA fitj.^4 fitj.^3.*fitc fitj.^2.*fitc.^2 fitj.*fitc.^3 fitc.^4];
  ctangcoeff=[ctangcoeff inv(AA'*AA)*AA'*fitb];
  err=sum((AA*ctangcoeff(:,bldidx)-fitb).^2);
  printf("// ctangcoeff%u error = %f\n", bldidx, err);

  AA=[ones(size(fitb,1),1) fitj fitb fitj.^2 fitj.*fitb fitb.^2];
  AA=[AA fitj.^3 fitj.^2.*fitb fitj.*fitb.^2 fitb.^3];
  AA=[AA fitj.^4 fitj.^3.*fitb fitj.^2.*fitb.^2 fitj.*fitb.^3 fitb.^4];
  bldangctcoeff=[bldangctcoeff inv(AA'*AA)*AA'*fitc];
  err=sum((AA*bldangctcoeff(:,bldidx)-fitc).^2);
  printf("// bldangctcoeff%u error = %f\n", bldidx, err);
endfor;

printf("\nconst double Propeller::poly_bldangcp[7][%u] = {", size(bldangcpcoeff,1));
for t=1:4;
  if t>1;
    printf(",");
  endif;
  printf("\n\t{");
  for tt=1:size(bldangcpcoeff,1);
    if tt>1;
      printf(",");
    endif;
    printf(" %g", bldangcpcoeff(tt,t));
  endfor;
  printf(" }");
  if t<4;
    printf(",\n\t{");
    for tt=1:size(bldangcpcoeff,1);
      if tt>1;
	printf(",");
      endif;
      printf(" %g", 0.5*(bldangcpcoeff(tt,t)+bldangcpcoeff(tt,t+1)));
    endfor;
    printf(" }");
  endif;
endfor;
printf("\n};\n");

printf("\nconst double Propeller::poly_bldangct[7][%u] = {", size(bldangctcoeff,1));
for t=1:4;
  if t>1;
    printf(",");
  endif;
  printf("\n\t{");
  for tt=1:size(bldangctcoeff,1);
    if tt>1;
      printf(",");
    endif;
    printf(" %g", bldangctcoeff(tt,t));
  endfor;
  printf(" }");
  if t<4;
    printf(",\n\t{");
    for tt=1:size(bldangctcoeff,1);
      if tt>1;
	printf(",");
      endif;
      printf(" %g", 0.5*(bldangctcoeff(tt,t)+bldangctcoeff(tt,t+1)));
    endfor;
    printf(" }");
  endif;
endfor;
printf("\n};\n");

for bldidx=1:4;
  f=figure("visible","off");
  col=jet(7);
  for t=7:-1:1;
    plot(cpang(t+(bldidx-1)*7,1:inn(t)),bldang(t,1:inn(t)),sprintf("+;J=%3.1f;",zjj(t)),"color",col(t,:));
    hold on;
    #AA=[ones(601,1) ones(601,1)*zjj(t) (-1:.01:5)' ones(601,1)*(zjj(t)^2) zjj(t)*(-1:.01:5)' (-1:.01:5)'.^2];
    #AA=[AA ones(601,1)*(zjj(t)^3) zjj(t)^2*(-1:.01:5)' zjj(t)*(-1:.01:5)'.^2 (-1:.01:5)'.^3];
    #AA=[AA ones(601,1)*(zjj(t)^4) zjj(t)^3*(-1:.01:5)' zjj(t)^2*(-1:.01:5)'.^2 zjj(t)*(-1:.01:5)'.^3 (-1:.01:5)'.^4];
    #plot((-1:.01:5),AA*cpangcoeff(:,bldidx),sprintf(";J=%3.1f;",zjj(t)),"color",col(t,:));
    AA=[ones(351,1) ones(351,1)*zjj(t) (0:0.2:70)' ones(351,1)*(zjj(t)^2) zjj(t)*(0:0.2:70)' (0:0.2:70)'.^2];
    AA=[AA ones(351,1)*(zjj(t)^3) zjj(t)^2*(0:0.2:70)' zjj(t)*(0:0.2:70)'.^2 (0:0.2:70)'.^3];
    AA=[AA ones(351,1)*(zjj(t)^4) zjj(t)^3*(0:0.2:70)' zjj(t)^2*(0:0.2:70)'.^2 zjj(t)*(0:0.2:70)'.^3 (0:0.2:70)'.^4];
    plot(AA*bldangcpcoeff(:,bldidx),(0:0.2:70),sprintf(";J=%3.1f approx;",zjj(t)),"color",col(t,:));
  endfor;
  hold off;
  grid on;
  xlabel("CP");
  ylabel("Blade Angle");
  title(sprintf("%u Blade Propeller",bldidx*2));
  axis([-0.5 1.5 0 70]);
  print(f,sprintf("propbldangcp%u.eps",bldidx),"-depsc2","-portrait","-color");
  axis([0.0 0.4 0 40]);
  print(f,sprintf("propbldangcp%ud.eps",bldidx),"-depsc2","-portrait","-color");

  f=figure("visible","off");
  col=jet(7);
  for t=1:7;
    plot(ctang(t+(bldidx-1)*7,1:inn(t)),bldang(t,1:inn(t)),sprintf("+;J=%3.1f;",zjj(t)),"color",col(t,:));
    hold on;
    #AA=[ones(601,1) ones(601,1)*zjj(t) (-1:.01:5)' ones(601,1)*(zjj(t)^2) zjj(t)*(-1:.01:5)' (-1:.01:5)'.^2];
    #AA=[AA ones(601,1)*(zjj(t)^3) zjj(t)^2*(-1:.01:5)' zjj(t)*(-1:.01:5)'.^2 (-1:.01:5)'.^3];
    #AA=[AA ones(601,1)*(zjj(t)^4) zjj(t)^3*(-1:.01:5)' zjj(t)^2*(-1:.01:5)'.^2 zjj(t)*(-1:.01:5)'.^3 (-1:.01:5)'.^4];
    #plot((-1:.01:5),AA*ctangcoeff(:,bldidx),sprintf(";J=%3.1f;",zjj(t)),"color",col(t,:));
    AA=[ones(351,1) ones(351,1)*zjj(t) (0:0.2:70)' ones(351,1)*(zjj(t)^2) zjj(t)*(0:0.2:70)' (0:0.2:70)'.^2];
    AA=[AA ones(351,1)*(zjj(t)^3) zjj(t)^2*(0:0.2:70)' zjj(t)*(0:0.2:70)'.^2 (0:0.2:70)'.^3];
    AA=[AA ones(351,1)*(zjj(t)^4) zjj(t)^3*(0:0.2:70)' zjj(t)^2*(0:0.2:70)'.^2 zjj(t)*(0:0.2:70)'.^3 (0:0.2:70)'.^4];
    plot(AA*bldangctcoeff(:,bldidx),(0:0.2:70),sprintf(";J=%3.1f approx;",zjj(t)),"color",col(t,:));
  endfor;
  hold off;
  grid on;
  xlabel("CT");
  ylabel("Blade Angle");
  title(sprintf("%u Blade Propeller",bldidx*2));
  axis([-0.2 0.6 0 70]);
  print(f,sprintf("propbldangct%u.eps",bldidx),"-depsc2","-portrait","-color");
  axis([0.0 0.2 0 40]);
  print(f,sprintf("propbldangct%ud.eps",bldidx),"-depsc2","-portrait","-color");
endfor;

# Figure 1 from 1971 Report
cpec = [ .01 .02 .03 .04 .05 .06 .08 .10 .15 .20 .25 .30 .35 .40 ];

btdcr = [ 1.84 1.775 1.75 1.74 1.76 1.78 1.80 1.81 1.835 1.85 1.865 1.875 1.88 1.88 ;
	  1 1 1 1 1 1 1 1 1 1 1 1 1 1 ;
	  .918 .874 .844 .821 .802 .781 .764 .752 .750 .750 .750 .750 .750 .750 ;
	  .864 .797 .758 .728 .701 .677 .652 .640 .630 .622 .620 .620 .620 .620 ];

pblorder=12;
pblcoeff = zeros(7,pblorder+1);
for t=1:4;
  pblcoeff(t*2-1,:)=polyfit([cpec (.41:.01:1)],[btdcr(t,:) btdcr(t,14)*ones(1,60)],pblorder);
endfor;
for t=1:3;
  pblcoeff(t*2,:)=polyfit([cpec (.41:.01:1)],[0.5*(btdcr(t,:)+btdcr(t+1,:)) 0.5*(btdcr(t,14)+btdcr(t+1,14))*ones(1,60)],pblorder);
endfor;
pblcoeff(3,:)=pblcoeff(3,:)>=0.5;

printf("\nconst double Propeller::poly_pbl[7][%u] = {", pblorder+1);
for t=1:7;
  if t>1;
    printf(",");
  endif;
  printf("\n\t{");
  for tt=pblorder+1:-1:1;
    printf(" %g", pblcoeff(t,tt));
    if tt>1;
      printf(",");
    endif;
  endfor;
  printf(" }");
endfor;
printf("\n};\n");

f=figure("visible","off");
col=jet(7);
for t=1:4;
  plot(cpec,btdcr(t,:),sprintf("+;%u Blades;",t*2),"color",col(2*t-1,:));
  hold on;
endfor;
for t=1:7;
  plot((0.01:0.01:0.8),polyval(pblcoeff(t,:),(0.01:0.01:0.8)),sprintf("-;%u Blades;",t+1),"color",col(t,:));
endfor;
hold off;
xlabel("Effective Power Coefficient CPE1");
ylabel("PBL");
grid on;
print(f,"proppbl.eps","-depsc2","-portrait","-color");
