/*****************************************************************************/

/*
 *      genairdataconst.cc  --  Generate Air Data Constants.
 *
 *      Copyright (C) 2012  Thomas Sailer (t.sailer@alumni.ethz.ch)
 *
 *      This program is free software; you can redistribute it and/or modify
 *      it under the terms of the GNU General Public License as published by
 *      the Free Software Foundation; either version 2 of the License, or
 *      (at your option) any later version.
 *
 *      This program is distributed in the hope that it will be useful,
 *      but WITHOUT ANY WARRANTY; without even the implied warranty of
 *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *      GNU General Public License for more details.
 *
 *      You should have received a copy of the GNU General Public License
 *      along with this program; if not, write to the Free Software
 *      Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 */

/*****************************************************************************/

#include "airdata.h"
#include <iostream>
#include <limits>

// to prevent a linker error
template<> constexpr typename AirData<float>::float_t AirData<float>::speed_of_sound_std = std::numeric_limits<float>::quiet_NaN();
template<> constexpr typename AirData<double>::float_t AirData<double>::speed_of_sound_std = std::numeric_limits<double>::quiet_NaN();

int main(int argc, char *argv[])
{
	std::cout << "// do not edit, automatically generated by genairdataconst.cc" << std::endl << std::endl
		  << "#include \"airdata.h\"" << std::endl << std::endl
		  << "template<> constexpr typename AirData<float>::float_t AirData<float>::speed_of_sound_std = "
		  << AirData<float>::get_lss_kelvin(IcaoAtmosphere<float>::std_sealevel_temperature)
		  << ";" << std::endl
		  << "template<> constexpr typename AirData<double>::float_t AirData<double>::speed_of_sound_std = "
		  << AirData<double>::get_lss_kelvin(IcaoAtmosphere<double>::std_sealevel_temperature)
		  << ";" << std::endl;
	return 0;
}
